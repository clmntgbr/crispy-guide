{% extends 'base.html.twig' %}

{% block title %}
    Gas Stations
{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"/>
    <style>


    </style>
{% endblock %}

{% block body %}
    <div id="map" class="gas_stations"></div>
{% endblock %}

{% block javascripts %}
    <script type="application/javascript" src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"></script>
    <script  type="application/javascript">

        function closeGasStation () {
            $('.gas_station_popup').css('display', 'none')
        }

        function getGasStations(latitude, longitude, radius) {
            var lowPrices = {}
            $.get({
                url: '{{ path('ajax_gas_stations') }}',
                type: 'GET',
                async: true,
                data: {
                    'latitude': latitude,
                    'longitude': longitude,
                    'radius': radius
                },
                success: function (elements, statut) {

                    group.clearLayers()

                    $('.gas_station_popup').remove()

                    $.each(elements, function(index, element) {
                        lastGasPrices = JSON.parse(element.last_gas_prices)
                        previousGasPrices = JSON.parse(element.previous_gas_prices)

                        $.each(lastGasPrices, function(index, lastGasPrice) {
                            var gasTypeId = lastGasPrice.gas_type_id
                            if (lowPrices.hasOwnProperty(gasTypeId)) {
                                if (lastGasPrice['price'] <= lowPrices[gasTypeId]['gasPriceValue']) {
                                    lowPrices[gasTypeId] = {'gasStationId' : element.gas_station_id, 'gasPriceId' : lastGasPrice.id, 'gasPriceValue': lastGasPrice.price}
                                }
                            } else {
                                lowPrices[gasTypeId] = {'gasStationId' : element.gas_station_id, 'gasPriceId' : lastGasPrice.id, 'gasPriceValue': lastGasPrice.price}
                            }
                        })

                        L.marker([parseFloat(element.latitude), parseFloat(element.longitude)]).addTo(group).on('click', function(e) {
                            closeGasStation()
                            $('#' + element.gas_station_id).css('display', 'block')

                        })

                        var content = "<div class='gas_station_popup' id='" + element.gas_station_id + "'><b class='gas_station_popup_close' onclick='closeGasStation();'></b>" + element['content'] + "</div>"
                        $('#app_gas_stations').append(content)
                        closeGasStation()

                    })
                    closeGasStation()
                    console.log(lowPrices)
                }
            })
        }

        const defaultCoordinate = {'latitude': 48.855680, 'longitude': 2.347045}
        var marker = 'marker'

        map = L.map('map').setView([defaultCoordinate.latitude, defaultCoordinate.longitude], 12)

        map.scrollWheelZoom.disable()

        L.control.scale().addTo(map)

        L.tileLayer('http://a.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
            minZoom: 1,
            maxZoom: 20
        }).addTo(map)

        var group = L.featureGroup().addTo(map)

        map.locate({setView: true, maxZoom: 13})

        map.on('locationfound', function (e) {
            var mapBoundNorthEast = map.getBounds().getNorthEast()
            var radius = mapBoundNorthEast.distanceTo(map.getCenter())

            getGasStations(e.latlng.lat, e.latlng.lng, radius)
        })

        map.on('moveend', function (e) {
            var mapBoundNorthEast = map.getBounds().getNorthEast()
            var radius = mapBoundNorthEast.distanceTo(map.getCenter())

            getGasStations(e.target.getCenter().lat, e.target.getCenter().lng, radius)
        })
    </script>
{% endblock %}
